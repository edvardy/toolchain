# -*- mode: ruby -*-
# # vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = "http://internetgateway.cdf.atradiusnet.com:8080"
    config.proxy.https    = "http://internetgateway.cdf.atradiusnet.com:8080"
    config.proxy.no_proxy = "localhost,127.0.0.1,.example.com,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
  end

  config.vm.define "gateway", primary:true do |gateway|
    gateway.vm.box = "edgej25/clearos"
    gateway.vm.box_version = "1.0.0"
    gateway.vm.network "private_network", ip: "192.168.0.2"
  end

  # AWX VM.
  config.vm.define "awx" do |awx|
    awx.vm.box = "geerlingguy/centos7"
    awx.ssh.insert_key = false

    awx.vm.provider :virtualbox do |v|
      v.memory = 4096
      v.cpus = 2
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    awx.vm.hostname = "awx.example.com"
    awx.vm.network :private_network, ip: "192.168.0.3"

    awx.vm.provision :ansible do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "provisioning/playbook.yml"
      ansible.inventory_path = "provisioning/inventory"
      ansible.become = true
    end
  end

  # Jenkins VM
  config.vm.define :jenkins do |jenkins|
    jenkins.vm.box = "geerlingguy/ubuntu1604"
    jenkins.ssh.insert_key = false
    jenkins.vm.synced_folder ".", "/vagrant", disabled: true

    jenkins.vm.provider :virtualbox do |v|
      v.name = "jenkins"
      v.memory = 512
      v.cpus = 2
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    jenkins.vm.hostname = "jenkins"
    jenkins.vm.network :private_network, ip: "192.168.0.4"

    # Ansible provisioner.
    jenkins.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "provisioning/playbook.yml"
      ansible.inventory_path = "provisioning/inventory"
      ansible.become = true
    end
  end

  # Gitlab VM
  config.vm.define :gitlab do |gitlab|
    gitlab.vm.box = "geerlingguy/centos7"
    gitlab.ssh.insert_key = false

    gitlab.vm.provider :virtualbox do |v|
      v.name = "gitlab"
      v.memory = 512
      v.cpus = 2
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    gitlab.vm.hostname = "gitlab"
    gitlab.vm.network :private_network, ip: "192.168.0.5"

    # Ansible provisioner.
    gitlab.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "provisioning/playbook.yml"
      ansible.inventory_path = "provisioning/inventory"
      ansible.become = true
    end
  end
end
